Yingzhu Zhang 

2. Assembly--Basics
	a. 0x08048a37
	b. 0x08048a6b WRONG
	c. 0xc08510c4 WRONG
	d. 0x68a89604 WRONG
	e. 0xfffdc5e8
	f. 0x08048a37
	g. 0x1136ce7ad --> 0x136ce7ad
	h. 0xdc5b2ea
	i. 0x3a2df8a7
	j. 0x8048dd0 WRONG

	KEY:
	a. 0x08048a37
	b. 0xc08510c4 CORRECT
	c. 0x08048a6b CORRECT
	d. 0xfffffe73 CORRECT
	e. 0xfffdc5e8
	f. 0x08048a37
	g. 0x136ce7ad 
	h. 0x0dc5b2ea
	i. 0x3a2df8a7
	j. 0x08048c92 CORRECT


3. Convert the following C program into assembly code

int test(int x, int y)
{
  int result;
  if (x > y) goto Else;
  result = x+y;
  goto Exit;
Else:
  result = (x-y)*2;
Exit:
  return result;
}

	movl 8(%ebp), %eax
	movl 12(%ebp),%edx
	cmpl %edx, %eax
	jg   .L6
	addl %edx, %eax
	jmp  .L7
  .L6:
  	subl %edx, %eax
  	sall $1, %eax
  .L7:
  	popl %ebp
  	ret


  	KEY:
  	test:
	movl	8(%ebp), %eax	#x
	movl	12(%ebp), %edx  #y
	cmpl	%edx, %eax	#x-y
	jg	.Else		#if x-y>0

	addl	%edx, %eax	#x+y
	movl	%eax, -4(%ebp)	#result = x+y
	jmp	.Exit
.Else:
	movl	8(%ebp), %eax	#x
	movl	12(%ebp), %edx	#y
	subl	%edx, %eax	#x-y
	sal	$1, %eax	#*2
	#addl	%eax, %eax
	#imul	$2, %eax
	movl	%eax, -4(%ebp)	#result=(x-y)*2
.Exit:
	movl	-4(%ebp), %eax
	ret